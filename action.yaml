name: 'Xquare deployment'
author: 'Xquare'
branding:
  icon: 'Xquare'
  color: 'Purple'

description: 'Tasks to deploy to xquare server'
inputs:
  service_name:
    description: 'Name of project'
    required: true
  service_type:
    description: 'Type of project (ex. be, fe)'
    required: true
  environment:
    description: 'Environment classification for servers (prod/stag)' 
    required: true
  config_file_path:
    description: 'Path of Xquare Config file'
    default: '.xquare/config.yaml'

runs:
  using: 'composite'
  steps:

    # - name: Check config values and set environment values
    #   id: config_script
    #   shell: bash
    #   run: $GITHUB_ACTION_PATH/config_script.sh

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::471407337433:user/ecr-iam

    - name: Step name
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids:
          CLOUD_CONFIG_USERNAME
          CLOUD_CONFIG_PASSWORD

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get the tag if exist
      id: get_tag
      shell: bash
      run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo ::set-output name=version_tag::$(echo $GITHUB_REF | cut -d / -f 3)
          else
            echo ::set-output name=version_tag::$(github.sha)
          fi
        
    - name: Publish to Registry If Taged
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ inputs.service_name }}-${{ inputs.service_type }}
        username: ${{ steps.ecr.outputs.username }}
        password: ${{ steps.ecr.outputs.password }}
        registry: ${{ steps.ecr.outputs.registry }}
        tags: ${{ version_tag }}
        buildargs: |
          CLOUD_CONFIG_USERNAME=${{ secrets.CLOUD_CONFIG_USERNAME }}
          CLOUD_CONFIG_PASSWORD=${{ secrets.CLOUD_CONFIG_PASSWORD }}
          PROFILE=${{ inputs.environment }}

    # - name: Check required config exists
    #   id: check-yaml
    #   run: $GITHUB_ACTION_PATH/check_config.sh
    #   shell: bash
    #   env:
    #     CONFIG_FILE_PATH: ${{ inputs.config_file_path }}
    #     TARGET_BANCH: ${{ GITHUB_REF#refs/heads/ }}
    #     GIT_URL: ${{ $GITHUB_SERVER_URL }}/${{ $GITHUB_REPOSITORY }}

    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.GITOPS_DEPLOY_TOKEN }}
        repository: team-xquare/xquare-gitops-repo
        event-type: update_image
        client-payload: |
          '{
            "ref" : "${{ github.ref }}", 
            "version" : "${{ version_tag }}",
            "service_name" : "${{ inputs.service_name }}",
            "service_type" : "${{ inputs.service_type }}",
            "environment" : "${{ inputs.environment }}"
          }'